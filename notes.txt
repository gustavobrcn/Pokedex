spread operator to add multiple moves from an array
// this will print {data: 'actual data'}
    // equivalent to...
    // let q = '';
    // if (type === 'id')
    //   q = `id/${id}`;
    // else
    //   q = `name/${id}`;
    //
    // This is asynchronous, meaning the line under it will execute first.
    // Unless, you`await` it
    // const response = await fetch(`https://fizal.me/pokeapi/api/v2/${query}`)
    // const data = await response.json() // You're right, .json() also returns a Promise
    //
    // `fetch` returns a `Promise`
    // a Promise has a method called `then` which you can pass a function to.
    // The function you give it, will be executed when the `Promise` `resolves`.
    // Since the function I gave it returns `res.json`,
    // that's what will be the value in `response`
    // This allows you to not have middleman variables like you have.
      // Even though `res.json()` returns a  promise, the `await` still works on it
      //
    // I watched something some time ago that said you should log things as object
    // so you have a label for the output instead of just some random printing.
    // the above is a shortcut for {data: data}
    // log `data` so you know what's in it

make development branch from master. then make a layout branch to write code
